{"version":3,"file":"static/js/244.5b8a82d2.chunk.js","mappings":"gMACA,G,QAAA,CAAgB,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,QAAU,2B,mBCWzI,MARA,SAAoBA,GAClB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAI,YAAcH,EAAMI,GAAIC,UAAWC,EAAEC,OAAOC,SACtDR,EAAMS,MAGb,ECHA,MAJA,SAAiBT,GACf,OAAOC,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAEI,QAAQF,SAAER,EAAMU,SAC3C,E,mBCcA,EAhBoB,SAACV,GACnB,OACEW,EAAAA,EAAAA,MAAA,QAAMC,SAAUZ,EAAMa,aAAaL,SAAA,EACjCP,EAAAA,EAAAA,KAACa,EAAAA,EAAK,CACJC,YAAY,kBACZC,UAAU,WACVP,KAAK,gBAGPR,EAAAA,EAAAA,KAAA,OAAAO,UACEP,EAAAA,EAAAA,KAAA,UAAAO,SAAQ,+DAIhB,ECVIS,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,eAAlBD,CAAmCE,GA0B1D,MAxBA,SAAiBpB,GACf,IAAIqB,EAAiBrB,EAAMsB,YAAYC,KAAI,SAAChB,GAAM,OAChDN,EAAAA,EAAAA,KAACuB,EAAU,CAACf,KAAMF,EAAOE,KAAML,GAAIG,EAAOH,IAASG,EAAOH,GAAM,IAE9DqB,EAAkBzB,EAAM0B,aAAaH,KAAI,SAACb,GAAO,OACnDT,EAAAA,EAAAA,KAAC0B,EAAO,CAACjB,QAASA,EAAQA,SAAcA,EAAQN,GAAM,IAOxD,OACEO,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAEsB,QAAQpB,SAAA,EACxBP,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAEuB,YAAYrB,SAAEa,KAEhCV,EAAAA,EAAAA,MAAA,OAAKN,UAAWC,EAAEwB,aAAatB,SAAA,CAC5BiB,GACDxB,EAAAA,EAAAA,KAACgB,EAAgB,CAACL,SAVxB,SAAuBmB,GACrB/B,EAAMgC,WAAWD,EAAOE,WAC1B,SAYF,ECTA,GAAeC,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAjBoB,SAACC,GACrB,MAAO,CACLC,YAAaD,EAAME,YAAYD,YAC/Bf,YAAac,EAAME,YAAYhB,YAC/BI,aAAcU,EAAME,YAAYZ,aAEpC,IAEyB,SAACa,GACxB,MAAO,CACLP,WAAY,SAACC,GACXM,GAASC,EAAAA,EAAAA,GAAwBP,GACnC,EAEJ,IAIEQ,EAAAA,EAFF,CAGEC,E","sources":["webpack://project/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogForm/DialogForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Dialogs_content__pkdSk\",\"dialog\":\"Dialogs_dialog__FMOst\",\"all_dialogs\":\"Dialogs_all_dialogs__-I4hQ\",\"message\":\"Dialogs_message__Umc8V\"};","import React from 'react';\nimport s from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction DialogItem(props) {\n  return (\n    <NavLink to={'/dialogs/' + props.id} className={s.dialog}>\n      {props.name}\n    </NavLink>\n  );\n}\n\nexport default DialogItem;\n","import React from 'react';\nimport s from './../Dialogs.module.css';\n\nfunction Message(props) {\n  return <div className={s.message}>{props.message}</div>;\n}\n\nexport default Message;\n","import React from 'react';\nimport { Field } from 'redux-form';\n\nconst dialogsForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <Field\n        placeholder=\"Enter your text\"\n        component=\"textarea\"\n        name=\"newMessage\"\n      />\n\n      <div>\n        <button>Отправить</button>\n      </div>\n    </form>\n  );\n};\n\nexport default dialogsForm;\n","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { reduxForm } from 'redux-form';\nimport DialogForm from './DialogForm/DialogForm';\n\nlet DialogsFormRedux = reduxForm({ form: 'dialogsForm' })(DialogForm);\n\nfunction Dialogs(props) {\n  let dialogElements = props.dialogItems.map((dialog) => (\n    <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />\n  ));\n  let messageElements = props.messageItems.map((message) => (\n    <Message message={message.message} key={message.id} />\n  ));\n\n  function addNewMessage(values) {\n    props.addMessage(values.newMessage);\n  }\n\n  return (\n    <div className={s.content}>\n      <div className={s.all_dialogs}>{dialogElements}</div>\n\n      <div className={s.all_massages}>\n        {messageElements}\n        <DialogsFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dialogs;\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { addMessgaeActionCreator } from '../../redux/dialogsReducer';\nimport withAuthRedirect from '../Hoc/withAuthRedirect';\nimport Dialogs from './Dialogs';\n\nlet mapStateToProps = (state) => {\n  return {\n    messageText: state.dialogsPage.messageText,\n    dialogItems: state.dialogsPage.dialogItems,\n    messageItems: state.dialogsPage.messageItems,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (newMessage) => {\n      dispatch(addMessgaeActionCreator(newMessage));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect,\n)(Dialogs);\n"],"names":["props","_jsx","NavLink","to","id","className","s","dialog","children","name","message","_jsxs","onSubmit","handleSubmit","Field","placeholder","component","DialogsFormRedux","reduxForm","form","DialogForm","dialogElements","dialogItems","map","DialogItem","messageElements","messageItems","Message","content","all_dialogs","all_massages","values","addMessage","newMessage","compose","connect","state","messageText","dialogsPage","dispatch","addMessgaeActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}